 bool possible ( int n, int k, vector<int> &stalls , int mid){
        
        int cowCount = 1;
        
        int temp = stalls[0];
        
        for(int i=0; i<n; i++){
            if(stalls[i] - temp >= mid ){
               
               temp = stalls[i] ;
             cowCount++;
            
        }
            if( cowCount == k ) return true;
            
            
        }
        return 0;
        
    }
    int solve(int n, int k, vector<int> &stalls) {
    sort(stalls.begin() , stalls.end() );
    int s = 0;
    int maxi = -1;
    
    for(int i=0; i<n; i++){
        maxi = max(maxi,stalls[i]);
    }
    
    int mid = s + (maxi - s)/2;
    
    while( s <= maxi ){
        
        if( possible(n,k,stalls,mid) ){
            s = mid+1;
        }
        
        
        else maxi = mid - 1;
        
        mid = s + (maxi - s)/2;
    }
    
        // Write your code here
        return maxi;
    }
